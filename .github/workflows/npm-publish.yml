name: Node.js CI/CD

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']
    
env:
  AWS_PRIVATE_KEY: ${{ secrets.AWS_PRIVATE_KEY }}
  
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Set permissions for private key
        run: |
          echo "${{ secrets.AWS_PRIVATE_KEY }}" > key.pem
          chmod 600 key.pem
          
      - name: Generate environment file
        run: |
          echo "${{ secrets.ENVIRONMENT }}" > .env

      - name: Install dependencies
        run: |
          npm ci

      - name: Build app
        run: |
          npm run build

      - name: Delete previous build
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@34.193.64.56 "rm -rf ~/cicd-app/"

      - name: Copy new build
        run: |
          ssh -i key.pem ubuntu@34.193.64.56 "mkdir -p ~/cicd-app/dist"
          scp -i key.pem -r ./dist/* ubuntu@34.193.64.56:~/cicd-app/dist/

      - name: Copy node_modules
        run: |
          scp -i key.pem -r ./node_modules ubuntu@34.193.64.56:~/cicd-app/

  deploy:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set permissions for private key
        run: |
          echo "${{ secrets.AWS_PRIVATE_KEY }}" > key.pem
          chmod 600 key.pem

      - name: Restart app
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@34.193.64.56 "pm2 restart nodepop"
